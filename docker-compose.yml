version: '3.7'

services:
  bd:
    image: "postgres"
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
       - "5432:5432"
    networks:
      net:
        ipv4_address: 200.0.0.4
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    #volumes:
    #  - ./bd:/var/lib/postgresql/data
  server:
    environment:
       - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/server.pfx
       - ASPNETCORE_Kestrel__Certificates__Default__Password=123
       - ASPNETCORE_HTTP_PORTS=8080
       - ASPNETCORE_HTTPS_PORTS=8081
       - ASPNETCORE_URLS=http://*:8080;https://*:8081
    command: /root/.dotnet/tools/dotnet-ef migrations add Initial; /root/.dotnet/tools/dotnet-ef database update
    build:
      context: .
      dockerfile: "./dockerfile"
    ports: 
       - "8080:8080"
       - "8081:8081"
    volumes: 
       - ~/.aspnet/https:/https:ro
    depends_on:
      bd:
       condition: service_healthy
    networks:
      net:
        ipv4_address: 200.0.0.2
  client:
    image: "client:3.0"
    build:
      context: .
      dockerfile: "/reactapp2.client/Dockerfile"
    ports:
       - "5173:5173"
    depends_on:
       - server
    networks:
      net:
        ipv4_address: 200.0.0.3
  adminer:
    image: adminer
    restart: always
    ports:
      - 8083:8080
    networks:
      net:
        ipv4_address: 200.0.0.5
    environment:
      ADMINER_DEFAULT_SERVER: bd
networks: 
  net:
    ipam:
     driver: default
     config:
       - subnet: 200.0.0.0/8
         gateway: 200.0.0.1
